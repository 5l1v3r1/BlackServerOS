{% set fqdn = item.1.name + '.' + item.1.domain|default(crypton_domain) %}
limit_req_zone $binary_remote_addr zone={{fqdn}}-account:10m rate=1r/s;

server {
    listen 80;
    server_name {{ fqdn }};
    rewrite ^/(.*)$ https://{{ fqdn }}/$1 permanent;
}

server {
    listen 443 ssl;
    server_name {{ fqdn }};

    access_log /var/log/nginx/{{ fqdn }}-access.log;
    error_log /var/log/nginx/{{ fqdn }}-error.log;

    server_tokens off;

    ssl_certificate /etc/nginx/{{ item.1.domain|default(crypton_domain) }}-wildcard.pem;
    ssl_certificate_key /etc/nginx/{{ item.1.domain|default(crypton_domain) }}-wildcard.pem;
    ssl_session_timeout  15m;

    ssl_protocols {{ ssl_protocols|join(' ') }};
    ssl_ciphers {{ ssl_ciphers|join(':') }};
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:crypton:10m;

    add_header X-Frame-Options 'SAMEORIGIN';
    add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload';
    add_header Content-Security-Policy "default-src 'self' blob:; connect-src wss://localhost localhost; script-src 'self'; img-src 'self'; style-src 'self'; font-src 'self'; object-src 'self'";
    add_header Cache-Control 'no-cache';

    rewrite ^/examples/.*/crypton.js /crypton.js;

    location /examples/diary {
        alias {{ item.1.src_checkout|default('/home/' + item.1.user + '/crypton') }}/client/examples/diary;
    }

    location /examples/chat3 {
        alias {{ item.1.src_checkout|default('/home/' + item.1.user + '/crypton') }}/client/examples/chat3;
    }

    location /vendor {
        alias /home/{{ item.1.user }}/vendor;
    }

    location /account {
        limit_req zone={{fqdn}}-account burst=10;
        proxy_pass https://localhost:{{ item.1.local_port }}/account;
        proxy_http_version 1.1;
        proxy_redirect default;
        proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location / {
        proxy_pass https://localhost:{{ item.1.local_port }}/;
        proxy_http_version 1.1;
        proxy_redirect default;
        proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
